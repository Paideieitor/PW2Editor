#ifndef _ZONE_DATA_H
#define _ZONE_DATA_H

#include <array>
#include <vector>

#include "Globals.h"

enum ZoneField
{
	MAP_TYPE,
	NPC_INFO_CACHE_IDX,
	AREA_ID,
	MATRIX_ID,
	SCRIPTS_ID,
	LEVELSCRIPTS_ID,
	TEXTS_ID,
	BG_MAP_SPR,
	BG_MAP_SUM,
	BG_MAP_AUT,
	BG_MAP_WIN,
	ENCOUNTERS_ID,
	ENTITIES_ID,
	PARENT_ZONE_ID,
	LOCATION_NAME_INFO,
	ENVIROMENT_FLAGS,
	FLAGS_BATTLE_BG_MAP_TRANSITION,
	MATRIX_CAMERA_BOUNDS,
	NAME_ICON,
	FLY_X,
	FLY_Y,
	FLY_Z,
	ZONEDATA_MAX,
};

typedef std::array<int, ZONEDATA_MAX> ZoneData;

typedef vector<u32> Location;

void ZoneReset(ZoneData& zoneData);

#define ZONEDATA_NULL -1

#define ZONE_INVALID_LOCATION_NAME_IDX 0x03FF
#define ZONE_INVALID_ENCOUNTER_IDX 0x1FFF

#define ZONE_LOCATION_NAME_IDX(zone) zone[LOCATION_NAME_INFO] & ZONE_INVALID_LOCATION_NAME_IDX
#define SET_ZONE_LOCATION_NAME_IDX(zone, idx) (zone[LOCATION_NAME_INFO] & (0xFFFF - ZONE_INVALID_LOCATION_NAME_IDX)) + (idx & ZONE_INVALID_LOCATION_NAME_IDX)

#define ZONE_ENCOUNTER_IDX(zone) zone[ENCOUNTERS_ID] & ZONE_INVALID_ENCOUNTER_IDX
#define SET_ZONE_ENCOUNTER_IDX(zone, idx) (zone[ENCOUNTERS_ID] & (0xFFFF - ZONE_INVALID_ENCOUNTER_IDX)) + (idx & ZONE_INVALID_ENCOUNTER_IDX)

#endif // _ZONE_DATA_H
