#ifndef _ZONE_DATA_H
#define _ZONE_DATA_H

#include "Data/Data.h"

#define ZONE_NULL -1

enum ZoneField
{
	MAP_TYPE,
	NPC_CACHE_IDX,
	AREA_ID,
	MATRIX_IDX,
	SCRIPTS_IDX,
	LEVEL_SCRIPTS_IDX,
	TEXTS_IDX,
	MUSIC_SPRING,
	MUSIC_SUMMER,
	MUSIC_AUTUM,
	MUSIC_WINTER,
	ENCOUNTER_IDX,
	ENTITIES_IDX,
	PARENT_ZONE_IDX,
	LOCATION_NAME_IDX,
	EVENT_FLAGS,
	BATTLE_TRANSITION_FLAGS,
	CAMERA_BOUNDS,
	ICON,
	FLY_X,
	FLY_Y,
	FLY_Z,
	ZONE_MAX,
};
#define ZONE_START 0
#define ZONE_SIZE ZONE_MAX

#define ZONE_FIELD(idx, field) ((idx * ZONE_SIZE) + ZONE_START + field)

#define ZONE_INVALID_LOCATION_NAME_IDX 0x03FF
#define ZONE_INVALID_ENCOUNTER_IDX 0x1FFF

#define ZONE_LOCATION_NAME_IDX(locIdx) (locIdx & ZONE_INVALID_LOCATION_NAME_IDX)
#define SET_ZONE_LOCATION_NAME_IDX(locIdx, idx) (locIdx & (0xFFFF - ZONE_INVALID_LOCATION_NAME_IDX)) + (idx & ZONE_INVALID_LOCATION_NAME_IDX)

#define ZONE_ENCOUNTER_IDX(encIdx) (encIdx & ZONE_INVALID_ENCOUNTER_IDX)
#define SET_ZONE_ENCOUNTER_IDX(encIdx, idx) (encIdx & (0xFFFF - ZONE_INVALID_ENCOUNTER_IDX)) + (idx & ZONE_INVALID_ENCOUNTER_IDX)


class ZoneData : public Data
{
public:

	virtual void GenerateSections(const vector<string>& narcPaths) override;
};

#endif // _ZONE_DATA_H
