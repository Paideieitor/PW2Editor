#ifndef _ITEM_DATA_H
#define _ITEM_DATA_H

#include "Data/Data.h"

#define ITEM_NULL -1

enum ItemField
{
	PRICE,
	HELD_EFFECT,
	HELD_PARAM,
	NATURAL_GIFT_EFFECT,
	FLING_EFFECT,
	FLING_POWER,
	NATURAL_GIFT_POWER,
	USABLE_FLAG,
	REGISTRABLE_FLAG,
	POCKET_FIELD,
	NATURAL_GIFT_TYPE,
	EFFECT_FIELD,
	EFFECT_BATTLE,
	HAS_BATTLE_STATS,
	BATTLE_POCKET,
	CONSUMABLE,
	SORT_IDX,
	CURE_SLEEP,
	CURE_POISON,
	CURE_BURN,
	CURE_FREEZE,
	CURE_PARALYSIS,
	CURE_CONFUSION,
	CURE_INFATUATION,
	CURE_GSP,
	BOOST_REVIVE,
	BOOST_SACRED_ASH,
	BOOST_RARECANDY,
	BOOST_EVOSTONE,
	BOOST_ATK,
	BOOST_DEF,
	BOOST_SPA,
	BOOST_SPD,
	BOOST_SPE,
	BOOST_ACC,
	BOOST_CRIT,
	BOOST_PP,
	BOOST_PP_MAX,
	PP_REPLENISH,
	PP_REPLENISH_FULL,
	HP_REPLENISH,
	EV_ADD_HP,
	EV_ADD_ATK,
	EV_ADD_DEF,
	EV_ADD_SPE,
	EV_ADD_SPA,
	EV_ADD_SPD,
	EV_ADD_ABOVE_100,
	FRIENDSHIP_ADD_1,
	FRIENDSHIP_ADD_2,
	FRIENDSHIP_ADD_3,
	ITEM_EV_HP,
	ITEM_EV_ATK,
	ITEM_EV_DEF,
	ITEM_EV_SPE,
	ITEM_EV_SPA,
	ITEM_EV_SPD,
	HEAL_AMOUNT,
	PP_GAIN,
	FRIENDSHIP_1,
	FRIENDSHIP_2,
	FRIENDSHIP_3,
	ITEM_UNUSED_1,
	ITEM_UNUSED_2,
	ITEM_MAX,
};
#define ITEM_START 0
#define ITEM_SIZE ITEM_MAX

#define ITEM_FIELD(field) (ITEM_START + field)

class ItemData : public Data
{
public:

	virtual void GenerateSections(const vector<string>& narcPaths) override;
};

#endif // _ITEM_DATA_H
