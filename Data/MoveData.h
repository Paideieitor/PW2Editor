#ifndef _MOVE_DATA_H
#define _MOVE_DATA_H

#include <array>

enum MoveField
{
	MOVE_TYPE,
	QUALITY,
	CATEGORY,
	POWER,
	ACCURACY,
	BASE_PP,
	PRIORITY,
	HIT_MIN,
	HIT_MAX,
	CONDITION,
	CONDITION_CHANCE,
	CONDITION_DURATION,
	TURN_MIN,
	TURN_MAX,
	CRIT_STAGE,
	FLINCH_RATE,
	BEHAVIOR,
	RECOIL,
	HEAL,
	TARGET,
	STAT_CHANGE_1,
	STAT_CHANGE_2,
	STAT_CHANGE_3,
	STAT_CHANGE_VOLUME_1,
	STAT_CHANGE_VOLUME_2,
	STAT_CHANGE_VOLUME_3,
	STAT_CHANGE_CHANCE_1,
	STAT_CHANGE_CHANCE_2,
	STAT_CHANGE_CHANCE_3,
	PADDING,
	IS_CONTACT,
	IS_REQUIRES_CHARGE,
	IS_RECHARGE,
	IS_BLOCKED_BY_PROTECT,
	IS_REFLECTED_BY_MAGIC_COAT,
	IS_STOLEN_BY_SNATCH,
	IS_COPIED_BY_MIRROR_MOVE,
	IS_PUNCH,
	IS_SOUND,
	IS_GROUNDED_BY_GRAVITY,
	IS_DEFROST,
	IS_LONG_RANGE,
	IS_BLOCKED_BY_HEAL_BLOCK,
	IS_BYPASSES_SUBSTITUTE,
	IS_UNKNOWN_14,
	IS_UNKNOWN_15,
	IS_UNKNOWN_16,
	IS_UNKNOWN_17,
	IS_UNKNOWN_18,
	IS_UNKNOWN_19,
	IS_UNKNOWN_20,
	IS_UNKNOWN_21,
	IS_UNKNOWN_22,
	IS_UNKNOWN_23,
	IS_UNKNOWN_24,
	IS_UNKNOWN_25,
	IS_UNKNOWN_26,
	IS_UNKNOWN_27,
	IS_UNKNOWN_28,
	IS_UNKNOWN_29,
	IS_UNKNOWN_30,
	IS_UNKNOWN_31,
	MOVEDATA_MAX,
};

typedef std::array<int, MOVEDATA_MAX> MoveData;

void MoveDataReset(MoveData& moveData);

#define MOVEDATA_NULL -128

#endif // _MOVE_DATA_H