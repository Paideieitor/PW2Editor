#ifndef _PERSONAL_DATA_H
#define _PERSONAL_DATA_H

#include <array>

enum PersonalField
{
	BASE_HP,
	BASE_ATK,
	BASE_DEF,
	BASE_SPE,
	BASE_SPA,
	BASE_SPD,
	TYPE_1,
	TYPE_2,
	CATCH_RATE,
	EVOLUTION_STAGE,
	EV_HP,
	EV_ATK,
	EV_DEF,
	EV_SPE,
	EV_SPA,
	EV_SPD,
	GROUNDED_SPRITE,
	WILD_ITEM_50,
	WILD_ITEM_5,
	WILD_ITEM_1,
	SEX_CHANCE,
	EGG_HAPPINESS,
	BASE_HAPPINESS,
	GROWTH_RATE,
	EGG_GROUP_1,
	EGG_GROUP_2,
	ABILITY_1,
	ABILITY_2,
	ABILITY_HIDDEN,
	ESCAPE_RATE,
	FORM_COUNT,
	FORM_OFFSET,
	FORM_SPRITE_OFFSET,
	FORM_RARE,
	COLOR,
	SPRITE_FLIP,
	BASE_EXP,
	HEIGHT,
	WEIGHT,
	TM_HM_1,
	TM_HM_2,
	TM_HM_3,
	TM_HM_4,
	TYPE_TUTORS,
	SPECIAL_TUTORS_1,
	SPECIAL_TUTORS_2,
	SPECIAL_TUTORS_3,
	SPECIAL_TUTORS_4,
	PERSONAL_MAX,
};
typedef std::array<int, PERSONAL_MAX> PersonalData;

void PersonalReset(PersonalData& personal);

#define STAT_COUNT 6
#define TYPE_COUNT 2
#define WILD_ITEM_COUNT 3
#define EGG_GROUP_COUNT 2
#define ABILITY_COUNT 3
#define TM_HM_COUNT 4
#define SPECIAL_TUTOR_COUNT 4

#define PERSONAL_NULL -1

#endif // _PERSONAL_DATA_H